buildscript {
    ext {
        kotlinVersion = '1.3.50'
        springBootVersion = '2.1.5.RELEASE'
    }
    repositories {
        mavenCentral()    
        
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}")
    }
}

apply from: 'frontend.gradle'
apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'kotlin-jpa'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'war'

// Set filename for output JAR
bootJar {
    archiveName = 'horus.jar'
}

// Force copying of the front-end into correct folders before processing resources
processResources.dependsOn buildFrontEnd

group = 'nl.utwente'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
    maven { url 'https://build.shibboleth.net/nexus/content/repositories/releases/' }
}


dependencies {
    implementation fileTree(dir: 'libs', include: '*.jar')
    runtimeOnly 'log4j:log4j:1.2.17'
    implementation 'edu.ksu.canvas:canvas-api:1.0.20'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-jersey'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-registry-prometheus'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
    implementation 'io.projectreactor:reactor-core:3.2.6.RELEASE'
    implementation 'org.pac4j:pac4j-saml:3.8.0'
    implementation 'org.flywaydb:flyway-core'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.jetbrains.kotlin:kotlin-reflect"
    implementation 'io.jsonwebtoken:jjwt-api:0.10.7'
    implementation 'com.github.ntrrgc:ts-generator:1.1.1'
    implementation 'org.apache.poi:poi-ooxml:4.1.0'
    implementation 'org.apache.commons:commons-csv:1.6'
    implementation 'org.antlr:antlr4-runtime:4.7.2'
    runtime 'io.jsonwebtoken:jjwt-impl:0.10.7'
    runtime 'io.jsonwebtoken:jjwt-jackson:0.10.7'
    providedRuntime 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.postgresql:postgresql'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'org.springframework.security:spring-security-test'
}

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = '1.8'
    }
}

compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = '1.8'
    }
}
